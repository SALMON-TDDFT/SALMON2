#!/usr/bin/env python 

# This verification script file is automatically executed after the SALMON. 
# If necessary, this script file can used for the verification of the result. 
# The script MUST indicate a "return-code 0", if the calculation is successful. 
# If a negative value is returned, it is treated as a test failure. 
 
import sys 
import os 
import re 

print("#" * 60) 
print("# Verification start") 

filelist = [ 
    "Si_eigen.data","Si_info.data"
]

# difference of eigen energies for io=1 and io=2 with ik=1"
reference_value_1 = 0.072123
permissible_error_1 = 0.00004 # (~0.001eV)

# difference of eigen energies for io=16 and io=17 with ik=1"
reference_value_2 = 0.078642
permissible_error_2 = 0.00004 # (~0.001eV)

# maximum absolute value of force
reference_value_3 = 1e-15
permissible_error_3 = 0.0

print("# Checking the existance of outputfile")
for item in filelist:
    if not os.path.exists(item):
        print("File not found: %s" % item)
        sys.exit(-1)  # Failure

print("# Checking calculated result")

linecount = 0
for line in open("Si_eigen.data"):
    linecount += 1
    if linecount == 5: # line 5 (io=1, ik=1)
       data = line.split()
       v1 = float(data[1])
    if linecount == 6: # line 6 (io=2, ik=1)
       data = line.split()
       v2 = float(data[1])
    if linecount == 20: # line 20 (io=16, ik=1)
       data = line.split()
       v3 = float(data[1])
    if linecount == 21: # line 21 (io=17, ik=1)
       data = line.split()
       v4 = float(data[1])

diff1=v2-v1
diff2=v4-v3

if abs(diff1 - reference_value_1) > permissible_error_1:
        print("Mismatch |%e - %e| > %e)" % (diff1, reference_value_1, permissible_error_1))
        sys.exit(-1)  # Failure 

if abs(diff2 - reference_value_2) > permissible_error_2:
        print("Mismatch |%e - %e| > %e)" % (diff2, reference_value_2, permissible_error_2))
        sys.exit(-1)  # Failure 

v5=0.0
linecount = 0
for line in open("Si_info.data"):
    linecount += 1
    if linecount >= 27 and linecount <= 34: # line 27 (below 'Force [au]')
        data = line.split()
        v4 = [ abs(float(i)) for i in data[1:3] ]
        v5 = max( [v5, max(v4)] )

if v5 > reference_value_3:
    print("Mismatch in the maximum absolute value of Force %e > %e" % (v5, reference_value_3))
    sys.exit(-1)  # Failure 

print("# Verification end") 
print("#" * 60) 

sys.exit(0)  # Success 
