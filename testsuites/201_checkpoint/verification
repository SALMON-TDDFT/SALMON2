#!/usr/bin/env python 

# This verification script file is automatically executed after the SALMON. 
# If necessary, this script file can used for the verification of the result. 
# The script MUST indicate a "return-code 0", if the calculation is successful. 
# If a negative value is returned, it is treated as a test failure. 
 
import sys 
import os 
import re 

print("#" * 60) 
print("# Verification start") 

dirlist = [
    "checkpoint_rt_000060",
    "checkpoint_rt_000120",
    "checkpoint_rt_000180",
]

filelist = [ 
    "Si_rt.data", 
]

origin_dir = "../112_bulk_Si_rt_response_dp"
target_dir = "./"

permissible_error =  1e-15

print("# Checking exists a directory")
for item in dirlist:
    if not os.path.isdir(item):
        print("Directory not found: %s" % item)
        sys.exit(-1)  # Failure

print("# Checking the existance of outputfile") 
for item in filelist: 
    if not os.path.isfile(item): 
        print("File not found: %s" % item)
        sys.exit(-1)  # Failure

print("# Checking calculated result")
for f in filelist:
    fo = os.path.join(origin_dir, f)
    ft = os.path.join(target_dir, f)
    ro = []
    rt = []

    for line in open(fo):
        ro.append(line.split())
    for line in open(ft):
        rt.append(line.split())

    print("# Check file: %s" % f)

    if (len(ro) != len(rt)):
        print("File lines mismatch! %d vs. %d" % (len(ro), len(rt)))
        sys.exit(-1)

    for i in range(7,len(ro)):   # Excluding header
        s = float(ro[i][15])
        d = float(rt[i][15])
        if abs(d - s) > permissible_error:
            print("Mismatch |%e - %e| > %e)" % (d, s, permissible_error))
            sys.exit(-1)  # Failure 

print("# Verification end") 
print("#" * 60) 

sys.exit(0)  # Success 
